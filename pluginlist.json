[ {
  "description" : "\n\n This plugin checks the fields of a ModalSubmitInteraction\n with regex or a custom callback\n",
  "hash" : "b8aa2274920c0f213c9114d45221c58b",
  "name" : "assertFields",
  "author" : [ "@jacoobes [<@182326315813306368>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/assertFields.ts",
  "example" : "\n\n ```ts\n export default commandModule({\n     type: CommandType.Modal,\n     plugins: [\n         assertFields({\n             fields: {\n             // check the modal field \"mcUsernameInput\" with the regex /a+b+c/\n                 mcUsernameInput: /a+b+c+/\n             },\n             failure: (errors, interaction) => {\n                 interaction.reply(errors.join(\"\\n\"))\n             }\n         }),\n     ],\n     execute: ctx => {\n         ctx.reply(\"nice!\")\n     }\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n This is buttonConfirmation plugin, it runs confirmation prompt in the form of buttons.\n Note that you need to use edit/editReply in the command itself because we are already replying in the plugin!\n Credits to original plugin of confirmation using reactions and its author!\n",
  "hash" : "0e2be01ac2619a9c8287c6ffce9e8131",
  "name" : "buttonConfirmation",
  "author" : [ "@EvolutionX-10 [<@697795666373640213>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/buttonConfirmation.ts",
  "example" : "\n\n ```ts\n import { buttonConfirmation } from \"../plugins/buttonConfirmation\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ buttonConfirmation() ],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n This plugin checks if a channel is the specified type\n",
  "hash" : "c6383e66bbf87381825aa39c62d5b51a",
  "name" : "channelType",
  "author" : [ "@Benzo-Fury [<@762918086349029386>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/channelType.ts",
  "example" : "\n\n ```ts\n import { channelType } from \"../plugins/channelType\";\n import { ChannelType } from \"discord.js\"\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ channelType([ChannelType.GuildText], 'This cannot be used here') ],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n Asks the user for a confirmation message before executing the command\n",
  "hash" : "a820bd60a80c3658dc36502523e623b1",
  "name" : "confirmation",
  "author" : [ "@trueharuu [<@504698587221852172>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/confirmation.ts",
  "example" : "\n\n ```ts\n import { confirmation } from \"../plugins/confirmation\";\n import { CommandType, commandModule } from \"@sern/handler\";\n\n // YOU MUST HAVE GUILD MESSAGE REACTION INTENTS ON YOUR CLIENT!!!!\n export default commandModule({\n  type : CommandType.Both\n  plugins: [confirmation()],\n \texecute: (ctx, args) => {\n \t\tctx.interaction.followUp('Hello welcome to the secret club')\n \t}\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n Allows you to set cooldowns (or \"ratelimits\") for commands\n limits user/channel/guild actions,",
  "hash" : "58c0d7e452c7cde713d66fbbda7e1f9e",
  "name" : "cooldown",
  "author" : [ "@trueharuu [<@504698587221852172>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/cooldown.ts",
  "example" : "\n\n ```ts\n import { cooldown } from \"../plugins/cooldown\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [cooldown.add( [ ['channel', '1/4'] ] )], // limit to 1 action every 4 seconds per channel\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n Disables a command entirely, for whatever reasons you may need.\n",
  "hash" : "5425ad0dcc0c58b6a9fa40dbbfb3f717",
  "name" : "disable",
  "author" : [ "@jacoobes [<@182326315813306368>]", "@Peter-MJ-Parker [<@371759410009341952>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/disable.ts",
  "example" : "\n\n ```ts\n import { disable } from \"../plugins/disable\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ disable() ],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "2.0.0"
}, {
  "description" : "\n\n This is dmOnly plugin, it allows commands to be run only in DMs.\n",
  "hash" : "5158a4cefb8d4650e9a9e45862d0a9b5",
  "name" : "dmOnly",
  "author" : [ "@EvolutionX-10 [<@697795666373640213>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/dmOnly.ts",
  "example" : "\n\n ```ts\n import { dmOnly } from \"../plugins/dmOnly\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [dmOnly()],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n This plugin checks if the channel is nsfw and responds to user with a specified response if not nsfw\n",
  "hash" : "fb844c123737e30c138e1ab9ce05f2d1",
  "name" : "nsfwOnly",
  "author" : [ "@Benzo-Fury [<@762918086349029386>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/nsfwOnly.ts",
  "example" : "\n\n ```ts\n import { nsfwOnly } from \"../plugins/nsfwOnly\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ nsfwOnly('response', true) ],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.0.0"
}, {
  "description" : "\n\n This is OwnerOnly plugin, it allows only bot owners to run the command, like eval.\n",
  "hash" : "4822b8938beda2555c361958a180cb43",
  "name" : "ownerOnly",
  "author" : [ "@EvolutionX-10 [<@697795666373640213>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/ownerOnly.ts",
  "example" : "\n\n ```ts\n import { ownerOnly } from \"../plugins/ownerOnly\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ ownerOnly() ], // can also pass array of IDs to override default owner IDs\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.2.0"
}, {
  "description" : "\n\n This is perm check, it allows users to parse the permission you want and let the plugin do the rest. (check user for that perm).\n",
  "hash" : "5104bf059b8afcab5989f889a9d0358f",
  "name" : "permCheck",
  "author" : [ "@Benzo-Fury [<@762918086349029386>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/permCheck.ts",
  "example" : "\n\n ```ts\n import { permCheck } from \"../plugins/permCheck\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ permCheck('permission', 'No permission response') ],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.0.1"
}, {
  "description" : "\n\n This is publish plugin, it allows you to publish your application commands using the discord.js library with ease.\n",
  "hash" : "67934a8aeb10e7efd3cc6ed826ae5e17",
  "name" : "publish",
  "author" : [ "@EvolutionX-10 [<@697795666373640213>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/publish.ts",
  "example" : "\n\n ```ts\n import { publish } from \"../plugins/publish\";\n import { commandModule } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ publish() ], // put an object containing permissions, ids for guild commands, boolean for dmPermission\n  // plugins: [ publish({ guildIds: ['guildId'], defaultMemberPermissions: 'Administrator'})]\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "2.0.0"
}, {
  "description" : "\n\n This is perm check, it allows users to parse the permission you want and let the plugin do the rest. (check bot or user for that perm).\n",
  "hash" : "57596321666d53c7dfb22ee1c590ce42",
  "name" : "requirePermission",
  "author" : [ "@Benzo-Fury [<@762918086349029386>]", "@needhamgary [<@342314924804014081>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/requirePermission.ts",
  "example" : "\n\n ```ts\n import { requirePermission } from \"../plugins/myPermCheck\";\n import { commandModule, CommandType } from \"@sern/handler\";\n export default commandModule({\n  plugins: [ requirePermission<CommandType>('target', 'permission', 'No response (optional)') ],\n  execute: (ctx) => {\n \t\t//your code here\n  }\n })\n ```",
  "version" : "1.2.0"
}, {
  "description" : "\n\n Checks if a command is available in a specific server.\n",
  "hash" : "b53b706d987fbbe1a5012d6c3d840093",
  "name" : "serverOnly",
  "author" : [ "@Peter-MJ-Parker [<@371759410009341952>]" ],
  "link" : "https://raw.githubusercontent.com/sern-handler/awesome-plugins/main/TypeScript/serverOnly.ts",
  "example" : "\n\n ```ts\n import { commandModule, CommandType } from \"@sern/handler\";\n import { serverOnly } from \"../plugins/serverOnly\";\n export default commandModule({\n   type: CommandType.Both,\n   plugins: [serverOnly([\"guildId\"], failMessage)], // fail message is the message you will see when the command is ran in the wrong server.\n   description: \"command description\",\n   execute: async (ctx, args) => {\n     // your code here\n   },\n });\n ```",
  "version" : "1.0.0"
} ]